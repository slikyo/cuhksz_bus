version: '3'
services:
  flask:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: city-sensing
    image: arthur/city-sensing:v1
    restart: unless-stopped
    environment:
      APP_DEBUG: "False"
      APP_PORT: 80
      #      MONGODB_DATABASE: flaskdb
      #      MONGODB_USERNAME: flaskuser
      #      MONGODB_PASSWORD: your_mongodb_password
      MONGODB_HOSTNAME: mongodb
    ports:
      - 8080:80
    #    volumes:
    #      - appdata:/var/www
    volumes:
      - static_volume:/city-sensing/src/static
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    command: mongod
    environment:
      #      MONGO_INITDB_ROOT_USERNAME: mongodbuser
      #      MONGO_INITDB_ROOT_PASSWORD: your_mongodb_root_password
      #      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - mongodbdata:/data/db
    networks:
      - backend

  nginx:
    image: nginx:1.15.7-alpine
    container_name: nginx_flask

    build: ./services/nginx
    volumes:
      - static_volume:/city-sensing/src/static
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 1337:80
    depends_on:
      - flask

#  webserver:
#    build:
#      context: nginx
#      dockerfile: Dockerfile
#    image: digitalocean.com/webserver:latest
#    container_name: webserver
#    restart: unless-stopped
#    environment:
#      APP_ENV: "prod"
#      APP_NAME: "webserver"
#      APP_DEBUG: "true"
#      SERVICE_NAME: "webserver"
#    ports:
#      - "19980:80"
#      - "19943:443"
#    volumes:
#      - nginxdata:/var/log/nginx
#    depends_on:
#      - flask
#    networks:
#      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
#  nginxdata:
#    driver: local